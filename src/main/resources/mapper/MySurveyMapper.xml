<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douzone.surveymanagement.mysurvey.mapper.MySurveyMapper">

    <resultMap id="surveyResultMap" type="com.douzone.surveymanagement.mysurvey.dto.request.MySurveyDTO">
        <!-- 설문 테이블의 컬럼 매핑 -->
        <id property="surveyNo" column="survey_no"/>
        <result property="userNo" column="user_no"/>
        <result property="userNickname" column="userNickname"/>
        <result property="userImage" column="user_image"/>
        <result property="surveyStatusNo" column="survey_status_no"/>
        <result property="surveyTitle" column="survey_title"/>
        <result property="surveyDescription" column="survey_description"/>
        <result property="surveyImage" column="survey_image"/>
        <result property="surveyCreatedAt" column="survey_created_at"/>
        <result property="surveyPostAt" column="survey_post_at"/>
        <result property="surveyClosingAt" column="survey_closing_at"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="openStatusNo" column="open_status_no"/>
        <result property="attendeeCount" column="attendee_count"/>
        <result property="surveyAttendCreatedAt" column="survey_attend_created_at"/>
        <collection property="tagNames" javaType="list" resultMap="MySurveyDTO"/>
    </resultMap>

    <resultMap id="MySurveyDTO" type="String">
        <result property="tagNames" column="tagNames"></result>
    </resultMap>

    <!-- user_no가 유저가 작성한 설문 목록을 가져오는 쿼리 -->
    <select id="selectMySurveysWithSorting" resultMap="surveyResultMap">
        SELECT
        s.*,
        t.tag_name AS tagNames,
        COUNT(DISTINCT sa.user_no) AS attendee_count
        FROM
        survey s
        LEFT JOIN
        survey_attend sa ON s.survey_no = sa.survey_no
        LEFT JOIN
        survey_tag st ON s.survey_no = st.survey_no
        LEFT JOIN
        tag t ON st.tag_no = t.tag_no
        WHERE
        s.user_no = #{userNo}
        AND s.is_deleted = 0
        GROUP BY
        s.survey_no, t.tag_name -- 추가적으로 태그 이름에 대한 GROUP BY
        ORDER BY
        CASE
        WHEN s.survey_status_no = 1 THEN 1 -- 작성 중
        WHEN s.survey_status_no = 2 THEN 2 -- 진행 중
        ELSE 3 -- 마감
        END,
        s.survey_closing_at;
    </select>

    <!-- user_no가 참여한 설문 목록을 가져오는 쿼리 -->
    <select id="selectMyParticipatedSurveys" resultMap="surveyResultMap">
        SELECT
        s.survey_no,
        sa.user_no,
        s.survey_status_no,
        s.survey_title,
        s.survey_description,
        s.survey_image,
        s.survey_created_at,
        s.survey_post_at,
        s.survey_closing_at,
        s.is_deleted,
        s.open_status_no,
        u.user_image,
        u.user_nickname AS userNickname,
        t.tag_name AS tagNames,
        sa.survey_attend_created_at,
        COUNT(DISTINCT sa.user_no) AS attendee_count
        FROM
        survey s
        LEFT JOIN
        survey_attend sa ON s.survey_no = sa.survey_no
        LEFT JOIN
        survey_tag st ON s.survey_no = st.survey_no
        LEFT JOIN
        tag t ON st.tag_no = t.tag_no
        LEFT JOIN
        user u ON s.user_no = u.user_no
        WHERE
        sa.user_no = #{userNo}
        AND s.is_deleted = 0
        GROUP BY
        s.survey_no, sa.user_no, u.user_nickname, t.tag_name
        ORDER BY
        CASE
        WHEN s.survey_status_no = 1 THEN 1
        WHEN s.survey_status_no = 2 THEN 2
        ELSE 3
        END,
        sa.survey_attend_created_at;
    </select>


    <!-- 본인이 작성 중인 설문을 삭제하는 쿼리 -->
    <update id="updateMySurveysInProgress"
            parameterType="com.douzone.surveymanagement.mysurvey.dto.request.MySurveyDTO">
        UPDATE survey
        SET is_deleted = 1
        WHERE user_no = #{userNo} AND survey_no = #{surveyNo} AND survey_status_no = 1;
    </update>
</mapper>
